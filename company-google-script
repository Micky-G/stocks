function onSelectionChange(e) { 
  const cell = e.range;
  const row = e.range.getRow();
  const col = e.range.getColumn();
  var value = cell.getValue();
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var as = ss.getActiveSheet();
  var name = as.getName();

  if(name == "ANNUAL" || name == "QUARTER") {
    var quarterSheet = ss.getSheetByName("QUARTER"); 
    var annualSheet = ss.getSheetByName("ANNUAL");
    if (col == 1 && row > 2 && value != '') { 
      quarterSheet.getRange(4,2).setValue(value); 
      annualSheet.getRange(4,2).setValue(value); 
    }
  }
}

function onEdit(e) { 
  const cell = e.range;
  const row = e.range.getRow();
  const col = e.range.getColumn();
  const as = e.source.getActiveSheet(); 
  var value = cell.getValue();
  if(name == "ANNUAL" && row == 4 && col == 2 && value != '') {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var quarterSheet = ss.getSheetByName("QUARTER");
    quarterSheet.getRange('B4').setValue(value);  
  }
}

function convertFloats() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheets = ["quotes","km-ttm", "ratio-ttm", "km", "ratio", "cf", "bs", "income", "shares", "raw-insider"];
  // var sheets = ["quotes","km-ttm", "ratio-ttm"];
  // var sheets = ["km", "ratio"];
  // var sheets = ["cf", "bs", "income"];
  // var sheets = ["shares", "raw-insider"];
  // var sheets = ["km"];
  var companySheet = ss.getSheetByName("ANNUAL");
  companySheet.getRange(3,2).setValue("Converting floats ...");

  for (var worksheet of sheets) {
    var sheet = ss.getSheetByName(worksheet);
    var rangeData = sheet.getDataRange();
    var lastColumn = rangeData.getLastColumn();
    var lastRow = rangeData.getLastRow();
    var searchRange = sheet.getRange(1,1, lastRow, lastColumn);
    
    var values = searchRange.getValues();
    console.log(values);

    var startCol = 0;
    var endCol = lastColumn;
    var cols_used = [];
    if (worksheet == "raw-insider") {
      startCol = 7;
    } else if (worksheet == "quotes" || worksheet == "income" || worksheet == "bs" || worksheet == "cf") {
      startCol = 6;
    } else if (worksheet == "ratio") {
      startCol = 4;
      endCol = 18;
      // cols_used = ["grossProfitMargin", "operatingProfitMargin", "netProfitMargin", "returnOnEquity", "returnOnCapitalEmployed","debtRatio", "interestCoverage", "priceEarningsToGrowthRatio"];
    } else if (worksheet == "km") {
      startCol = 4;
      endCol = 26;
      cols_used = ["marketCap","peRatio","priceToSalesRatio","pocfratio","pfcfRatio","pbRatio","currentRatio", "roic"]
      // cols_used = ["marketCap"];
    } else if (worksheet == "shares") {
      startCol = 4;
    } else if (worksheet == 'ratio-ttm') {
      startCol = 2;
      endCol = 22;
      cols_used = ["grossProfitMarginTTM","operatingProfitMarginTTM","netProfitMarginTTM","returnOnEquityTTM","debtRatioTTM","debtEquityRatioTTM","interestCoverageTTM","priceToBookRatioTTM","priceToSalesRatioTTM","priceEarningsRatioTTM","priceToFreeCashFlowsRatioTTM","priceToOperatingCashFlowsRatioTTM","priceEarningsToGrowthRatioTTM"];
    } else if (worksheet == "km-ttm") {
      startCol = 2;
    }
    // Loop through array and convert to float
    for ( i = startCol; i < endCol; i++){
      for ( j = 0 ; j < lastRow; j++){
        var val = values[j][i];
        if (j == 0 && cols_used.length > 0) {
          if (!cols_used.includes(val)) {
            console.log("Skipping " + val);
            break;
            
          }
        }
        console.log(String(j) + ", " + String(i));
        console.log(val);
        
        float_val = +val;
        if (isNaN(float_val)) {
          console.log(float_val)
        } else {
          sheet.getRange(j+1,i+1).setValue(float_val);
          console.log('updating to ' + typeof float_val);
        }
      };
    };
  };
  var now = new Date();
  var day = now.getDate()
  var month = now.getMonth() + 1
  var time = now.toLocaleTimeString('en-US', { hour12: false, 
                                             hour: "numeric", 
                                             minute: "numeric"});
  companySheet.getRange(3,2).setValue("Last converted: " + month + "/" + day + " " + time);
}